#include<iostream>
#include<fstream>
using namespace std;
#define LINELEN 80


// Create a graph from file fid
template <typename GType>
Graph* createGraph(ifstream fid) {
  char buffer[LINELEN+1]; 
  char Vertex[];
  int Arbit[];
  int i=0,numVert=0;
  int v1, v2, dist;
  int numEdg=0;


  // Create an array of vertices with another array of corresponding arbitrary integer values
  while (getline(buffer, LINELEN, fid) != NULL) {
    for (int a=0; a<numVert; a++){
      int t=0;
      if (buffer[i]==Vertex[a]){
        t=-1;
        break;
        }
      }
    if (t=0){
      Vertex[numVert]=buffer[i];
      numVert++;
      }
    i++;

    while (buffer[i] == ' ' || buffer[i]==',' || buffer[i]==';') i++;
    for (int a=0; a<numVert; a++){
      int t=0;
      if (buffer[i]==Vertex[a]){
        t=-1;
        break;
        }
      }
    if (t==0){
      Vertex[numVert]=buffer[i];
      numVert++;
      }
  }
  
  //array of arbitrary numbers corresponding to each vertex
  Arbit[numVert];
  for (int a=0; a<numVert; a++)
    Arbit[a]=a;

  // Read in edges
  i=0;
  fid.seekg(0,beg);   //sets the file back to the beggining to read again
  while (fid.getline(buffer, 81)) {
    for (int a=0, a<numVert, a++){
      if (buffer[i]==Vertex[a])
        v1=Arbit[a];
      }
    while (buffer[i] == ' ' || buffer[i]==',' || buffer[i]==';') i++;
    for (int a=0, a<numVert, a++){
      if (buffer[i]==Vertex[a])
        v2=Arbit[a];
      }
    dist = 1;
    G->setEdge(v1, v2, dist);
    numEdg++;
  }
  return G;
}

main(){
  //importing the file
  string x;
  cout<<"Enter the name of the file: ";
  cin>>x;
  ifstream fid(x);
}

